# -*- coding: utf-8 -*-
"""data_statistics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aVEdrsIq7S_Y0gRqSPiHVl2xmjm8S98s
"""

import pandas as pd

datasets = ["MovieLens100K", "Gowalla", "Foursquare", "Epinion", "LastFM", "BookCrossing", "AmazonOffice", "AmazonToy"]
user_threasholds = [10, 20, 50, 100]
item_threasholds = [10, 20, 50, 100]

for dataset in datasets:
    train_data = pd.read_csv(f"datasets/{dataset}/{dataset}_train.txt", sep='\t', names=['uid', 'iid', 'rating'])
    num_users = len(train_data['uid'].unique())
    num_items = len(train_data['iid'].unique())
    print(num_users, num_items)
    for threashold in user_threasholds:
        uid_value_counts = train_data['uid'].value_counts()
        user_count = uid_value_counts[uid_value_counts >= threashold].count()
        print(f"No. of users in {dataset} with >= {threashold} ineractions: {user_count} - {round(user_count * 100 / num_users, 2)}")

    print()

    for threashold in item_threasholds:
        # item side fewer than ds_rate cheking
        iid_value_counts = train_data['iid'].value_counts()
        item_count = iid_value_counts[iid_value_counts >= threashold].count()
        # print(f"No. of items < {ds[ds_config]['ds_core']} ineractions: {item_interaction}")
        print(f"No. of items in {dataset} with >= {threashold} ineractions: {item_count} - {round(item_count * 100 / num_items, 2)}")

    print()